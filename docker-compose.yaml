version: '3.8'

services:
  # Frontend Vue.js application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: chronosync-frontend
    restart: unless-stopped
    ports:
      - "4173:80"
    environment:
      - SERVICE_FQDN_FRONTEND
      - VITE_API_URL=${API_URL:-http://localhost:3005/api}
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.chronosync-frontend.rule=Host(`${FRONTEND_FQDN:-app.chronosync.local}`)
      - traefik.http.routers.chronosync-frontend.entrypoints=http
      - traefik.http.services.chronosync-frontend.loadbalancer.server.port=80
      - coolify.managed=true

  # Backend Express.js service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: chronosync-backend
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - SERVICE_FQDN_API
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3005
      - JWT_SECRET=${JWT_SECRET:-replace_this_with_a_secure_random_string_in_production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-30d}
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${SERVICE_PASSWORD_DB}
      - DB_HOST=postgres-chronosync
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-chronosync_db}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${SERVICE_PASSWORD_DB}@postgres-chronosync:5432/${POSTGRES_DB:-chronosync_db}
      - API_URL=${API_URL:-http://localhost:3005/api}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:4173}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-425715035542-lmdn6ekp15cvis0kln61rik6athn0acm.apps.googleusercontent.com}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-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}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-Ov23liM0simnNPV5j96H}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-60917318086e253577ecc4e16d3b1db38fd024fa}
      - APPLE_CLIENT_ID=${APPLE_CLIENT_ID:-your_apple_client_id}
      - APPLE_TEAM_ID=${APPLE_TEAM_ID:-your_apple_team_id}
      - APPLE_KEY_ID=${APPLE_KEY_ID:-your_apple_key_id}
      - APPLE_PRIVATE_KEY_LOCATION=${APPLE_PRIVATE_KEY_LOCATION:-path/to/your/private/key.p8}
    depends_on:
      - postgres-chronosync
    labels:
      - traefik.enable=true
      - traefik.http.routers.chronosync-backend.rule=Host(`${API_FQDN:-api.chronosync.local}`)
      - traefik.http.routers.chronosync-backend.entrypoints=http
      - traefik.http.services.chronosync-backend.loadbalancer.server.port=3005
      - coolify.managed=true

  # PostgreSQL Database
  postgres-chronosync:
    image: postgres:16-alpine
    container_name: postgres-chronosync
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_DB}
      - POSTGRES_DB=${POSTGRES_DB:-chronosync_db}
      - SERVICE_PASSWORD_DB=${SERVICE_PASSWORD_DB:-chronosync_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    labels:
      - coolify.managed=true

  # pgAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: chronosync-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - SERVICE_FQDN_PGADMIN
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@chronosync.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres-chronosync
    labels:
      - traefik.enable=true
      - traefik.http.routers.chronosync-pgadmin.rule=Host(`${PGADMIN_FQDN:-pgadmin.chronosync.local}`)
      - traefik.http.routers.chronosync-pgadmin.entrypoints=http
      - traefik.http.services.chronosync-pgadmin.loadbalancer.server.port=80
      - coolify.managed=true

volumes:
  postgres_data:
  pgadmin_data: 